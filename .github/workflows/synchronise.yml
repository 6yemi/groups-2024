name: "Prototype Groups"
on:
  workflow_dispatch:
    inputs:
      workflow_id:
        required: true
        type: number
  workflow_run:
    workflows: ["Check"]
    types:
      - completed

jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'

    permissions:
      contents: read
      actions: read
      issues: write
      pull-requests: write

    steps:
      - name: Get commit info
        id: commit
        run: |
          SHA=$(gh run view ${{ inputs.workflow_id || github.event.workflow_run.id }} --json headSha | jq -r '.headSha')
          echo "SHA=$SHA" >> $GITHUB_OUTPUT

      - name: Get token for sepp-bot
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.SEPP_BOT_ID }}
          private-key: ${{ secrets.SEPP_BOT_PK }}

      - name: Register workflow for PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh api --method POST /repos/uob-sepp/groups-2024/statuses/${{ steps.commit.outputs.SHA }} \
            -f state='pending' \
            -f target_url='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Clone repository
        uses: actions/checkout@v4

      - name: Compile TypeScript sources
        uses: ./.github/actions/build

      - name: Delete existing groups.yaml
        run: rm ./config/groups.yaml

      - name: Download PR artifact
        uses: actions/download-artifact@v4
        with:
          name: groups.yaml
          path: ./config/
          run-id: ${{ inputs.workflow_id || github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Format groups.yaml
      #   run: |
      #     git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --global user.name "github-actions[bot]"
      #     git add config/groups.yaml
      #     git commit -m 'Temporary commit'
      #     npm run format-config

      # - name: Check for changes
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     if [ ! -z "$(git status --porcelain)" ]; then
      #       echo \
      #         'Running \`npm run format-config\` changed the formatting of \`groups.yaml\`:\n\n\`\`\`diff\n' \
      #         "$(git diff)\n" \
      #         '\`\`\`\n\nPlease run \`npm run format-config\` locally and commit the changes.' | gh pr comment --body-file - ${{ github.event.workflow_run.pull_requests[0].number }}
      #     fi

      - name: Validate configuration
        run: npm run validate
        env:
          CANVAS_TOKEN: ${{ secrets.CANVAS_TOKEN }}

      - name: "Post changes as PR comment"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let markdown = 'changes.md';
            let issue_number = Number(fs.readFileSync('./config/pr.yaml', 'utf-8'));

            if (fs.existsSync(markdown)) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: fs.readFileSync('changes.md', 'utf-8')
              });
            }
